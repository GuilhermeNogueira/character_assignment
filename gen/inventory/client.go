// Code generated by goa v3.8.5, DO NOT EDIT.
//
// inventory client
//
// Command:
// $ goa gen characters/design

package inventory

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "inventory" service client.
type Client struct {
	ListEndpoint       goa.Endpoint
	ShowEndpoint       goa.Endpoint
	ShowItemEndpoint   goa.Endpoint
	AddEndpoint        goa.Endpoint
	AddItemEndpoint    goa.Endpoint
	RemoveItemEndpoint goa.Endpoint
	RemoveEndpoint     goa.Endpoint
	UpdateEndpoint     goa.Endpoint
}

// NewClient initializes a "inventory" service client given the endpoints.
func NewClient(list, show, showItem, add, addItem, removeItem, remove, update goa.Endpoint) *Client {
	return &Client{
		ListEndpoint:       list,
		ShowEndpoint:       show,
		ShowItemEndpoint:   showItem,
		AddEndpoint:        add,
		AddItemEndpoint:    addItem,
		RemoveItemEndpoint: removeItem,
		RemoveEndpoint:     remove,
		UpdateEndpoint:     update,
	}
}

// List calls the "list" endpoint of the "inventory" service.
func (c *Client) List(ctx context.Context, p *ListPayload) (res StoredInventoryCollection, err error) {
	var ires interface{}
	ires, err = c.ListEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(StoredInventoryCollection), nil
}

// Show calls the "show" endpoint of the "inventory" service.
// Show may return the following errors:
//   - "not_found" (type *NotFound): Character not found
//   - error: internal error
func (c *Client) Show(ctx context.Context, p *ShowPayload) (res *StoredInventory, err error) {
	var ires interface{}
	ires, err = c.ShowEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*StoredInventory), nil
}

// ShowItem calls the "showItem" endpoint of the "inventory" service.
// ShowItem may return the following errors:
//   - "not_found" (type *NotFound): Character not found
//   - error: internal error
func (c *Client) ShowItem(ctx context.Context, p *ShowItemPayload) (res StoredItemCollection, err error) {
	var ires interface{}
	ires, err = c.ShowItemEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(StoredItemCollection), nil
}

// Add calls the "add" endpoint of the "inventory" service.
func (c *Client) Add(ctx context.Context, p *AddPayload) (res string, err error) {
	var ires interface{}
	ires, err = c.AddEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// AddItem calls the "addItem" endpoint of the "inventory" service.
func (c *Client) AddItem(ctx context.Context, p *AddItemPayload) (res string, err error) {
	var ires interface{}
	ires, err = c.AddItemEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(string), nil
}

// RemoveItem calls the "removeItem" endpoint of the "inventory" service.
func (c *Client) RemoveItem(ctx context.Context, p *RemoveItemPayload) (err error) {
	_, err = c.RemoveItemEndpoint(ctx, p)
	return
}

// Remove calls the "remove" endpoint of the "inventory" service.
// Remove may return the following errors:
//   - "not_found" (type *NotFound): inventory not found
//   - error: internal error
func (c *Client) Remove(ctx context.Context, p *RemovePayload) (err error) {
	_, err = c.RemoveEndpoint(ctx, p)
	return
}

// Update calls the "update" endpoint of the "inventory" service.
func (c *Client) Update(ctx context.Context, p *UpdatePayload) (err error) {
	_, err = c.UpdateEndpoint(ctx, p)
	return
}
