// Code generated by goa v3.8.5, DO NOT EDIT.
//
// item HTTP client CLI support package
//
// Command:
// $ goa gen characters/design

package client

import (
	item "characters/gen/item"
	"encoding/json"
	"fmt"

	goa "goa.design/goa/v3/pkg"
)

// BuildShowPayload builds the payload for the item show endpoint from CLI
// flags.
func BuildShowPayload(itemShowID string, itemShowView string) (*item.ShowPayload, error) {
	var err error
	var id string
	{
		id = itemShowID
	}
	var view *string
	{
		if itemShowView != "" {
			view = &itemShowView
			if !(*view == "default" || *view == "tiny") {
				err = goa.MergeErrors(err, goa.InvalidEnumValueError("view", *view, []interface{}{"default", "tiny"}))
			}
			if err != nil {
				return nil, err
			}
		}
	}
	v := &item.ShowPayload{}
	v.ID = id
	v.View = view

	return v, nil
}

// BuildAddPayload builds the payload for the item add endpoint from CLI flags.
func BuildAddPayload(itemAddBody string) (*item.Item, error) {
	var err error
	var body AddRequestBody
	{
		err = json.Unmarshal([]byte(itemAddBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"damage\": 37.8267,\n      \"description\": \"Boots of Travel is an item purchasable at the Base Shop, under Accessories. It can be upgraded by purchasing the recipe again.\",\n      \"healing\": 12.6,\n      \"name\": \"Boots of travel\",\n      \"protection\": 65.21\n   }'")
		}
	}
	v := &item.Item{
		Name:        body.Name,
		Description: body.Description,
		Damage:      body.Damage,
		Healing:     body.Healing,
		Protection:  body.Protection,
	}

	return v, nil
}

// BuildRemovePayload builds the payload for the item remove endpoint from CLI
// flags.
func BuildRemovePayload(itemRemoveID string) (*item.RemovePayload, error) {
	var id string
	{
		id = itemRemoveID
	}
	v := &item.RemovePayload{}
	v.ID = id

	return v, nil
}

// BuildUpdatePayload builds the payload for the item update endpoint from CLI
// flags.
func BuildUpdatePayload(itemUpdateBody string, itemUpdateID string) (*item.UpdatePayload, error) {
	var err error
	var body UpdateRequestBody
	{
		err = json.Unmarshal([]byte(itemUpdateBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"item\": {\n         \"damage\": 37.8267,\n         \"description\": \"Boots of Travel is an item purchasable at the Base Shop, under Accessories. It can be upgraded by purchasing the recipe again.\",\n         \"healing\": 12.6,\n         \"name\": \"Boots of travel\",\n         \"protection\": 65.21\n      }\n   }'")
		}
		if body.Item == nil {
			err = goa.MergeErrors(err, goa.MissingFieldError("item", "body"))
		}
		if err != nil {
			return nil, err
		}
	}
	var id string
	{
		id = itemUpdateID
	}
	v := &item.UpdatePayload{}
	if body.Item != nil {
		v.Item = marshalItemRequestBodyToItemItem(body.Item)
	}
	v.ID = id

	return v, nil
}
